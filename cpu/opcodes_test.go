package cpu

import (
	"fmt"
	"testing"

	"github.com/scottyw/goomba/mem"
)

type testMemory struct {
	mem map[uint16]byte
}

// MemoryDump the contents of the whole address space to file
func (mem testMemory) MemoryDump() {
	fmt.Println(mem.mem)
}

// Read a byte from the chosen memory location
func (mem testMemory) Read(addr uint16) byte {
	val, present := mem.mem[addr]
	if !present {
		panic(fmt.Sprintf("Read memory failure: addr=0x%04x mem=%v", addr, mem))
	}
	return val
}

// Write a byte to the chosen memory location
func (mem testMemory) Write(addr uint16, b byte) {
	expected, present := mem.mem[addr]
	if !present || expected != b {
		panic(fmt.Sprintf("Write memory failure: addr=0x%04x mem=%v", addr, mem))
	}
}

type testTable struct {
	instruction uint8
	u8          uint8
	u16         uint16
	actualCPU   CPU
	expectedCPU CPU
	mem         mem.Memory
}

func (cpu *CPU) checkFlags(op opcodeMetadata, flagsToUpdate map[string]bool) {
	if len(op.Flags) > 0 {
		for i, flag := range op.Flags {
			switch flag {
			case "0":
				cpu.resetFlag(flags[i])
			case "1":
				cpu.setFlag(flags[i])
			case "-":
				// Leave the flag alone
			default:
				set, present := flagsToUpdate[flag]
				if !present {
					panic(fmt.Sprintf("Expected flag %v in %v", flag, flagsToUpdate))
				}
				if set {
					cpu.setFlag(flags[i])
				} else {
					cpu.resetFlag(flags[i])
				}
			}
		}
	}
}

func TestOpcodes(t *testing.T) {
	for i, test := range tests {
		(&test.actualCPU).dispatch(test.instruction)
		if test.actualCPU != test.expectedCPU {
			t.Error("( TEST", i, ") CPUs do not match for: ", test)
			t.Error("  Expected : ", test.expectedCPU)
			t.Error("  Actual   : ", test.actualCPU)
		}
		// checkFlags()
	}
}

var tests = []testTable{
	// {"ADC", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
	// {"ADC", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": false, "C": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
	// {"ADC", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": true, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
	// {"ADC", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, map[string]bool{"Z": true, "H": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
	// {"ADC", "A", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
	// {"ADC", "A", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
	// {"ADC", "A", "B", 0x00, 0x0000, CPU{a: 0x1a, b: 0x2b}, CPU{a: 0x1a, b: 0x2b}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "B", 0x00, 0x0000, CPU{a: 0x1a, b: 0x2b}, CPU{a: 0x1a, b: 0x2b}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "B", 0x00, 0x0000, CPU{a: 0x1a, b: 0x2b}, CPU{a: 0x1a, b: 0x2b}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
	// {"ADC", "A", "B", 0x00, 0x0000, CPU{a: 0x1a, b: 0x2b}, CPU{a: 0x1a, b: 0x2b}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
	// {"ADC", "A", "C", 0x00, 0x0000, CPU{a: 0x1a, c: 0x3c}, CPU{a: 0x1a, c: 0x3c}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "C", 0x00, 0x0000, CPU{a: 0x1a, c: 0x3c}, CPU{a: 0x1a, c: 0x3c}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "C", 0x00, 0x0000, CPU{a: 0x1a, c: 0x3c}, CPU{a: 0x1a, c: 0x3c}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
	// {"ADC", "A", "C", 0x00, 0x0000, CPU{a: 0x1a, c: 0x3c}, CPU{a: 0x1a, c: 0x3c}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
	// {"ADC", "A", "D", 0x00, 0x0000, CPU{a: 0x1a, d: 0x4d}, CPU{a: 0x1a, d: 0x4d}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "D", 0x00, 0x0000, CPU{a: 0x1a, d: 0x4d}, CPU{a: 0x1a, d: 0x4d}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "D", 0x00, 0x0000, CPU{a: 0x1a, d: 0x4d}, CPU{a: 0x1a, d: 0x4d}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
	// {"ADC", "A", "D", 0x00, 0x0000, CPU{a: 0x1a, d: 0x4d}, CPU{a: 0x1a, d: 0x4d}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
	// {"ADC", "A", "E", 0x00, 0x0000, CPU{a: 0x1a, e: 0x5e}, CPU{a: 0x1a, e: 0x5e}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "E", 0x00, 0x0000, CPU{a: 0x1a, e: 0x5e}, CPU{a: 0x1a, e: 0x5e}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "E", 0x00, 0x0000, CPU{a: 0x1a, e: 0x5e}, CPU{a: 0x1a, e: 0x5e}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
	// {"ADC", "A", "E", 0x00, 0x0000, CPU{a: 0x1a, e: 0x5e}, CPU{a: 0x1a, e: 0x5e}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
	// {"ADC", "A", "H", 0x00, 0x0000, CPU{a: 0x1a, h: 0x71}, CPU{a: 0x1a, h: 0x71}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "H", 0x00, 0x0000, CPU{a: 0x1a, h: 0x71}, CPU{a: 0x1a, h: 0x71}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "H", 0x00, 0x0000, CPU{a: 0x1a, h: 0x71}, CPU{a: 0x1a, h: 0x71}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
	// {"ADC", "A", "H", 0x00, 0x0000, CPU{a: 0x1a, h: 0x71}, CPU{a: 0x1a, h: 0x71}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
	// {"ADC", "A", "L", 0x00, 0x0000, CPU{a: 0x1a, l: 0x82}, CPU{a: 0x1a, l: 0x82}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "L", 0x00, 0x0000, CPU{a: 0x1a, l: 0x82}, CPU{a: 0x1a, l: 0x82}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "L", 0x00, 0x0000, CPU{a: 0x1a, l: 0x82}, CPU{a: 0x1a, l: 0x82}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
	// {"ADC", "A", "L", 0x00, 0x0000, CPU{a: 0x1a, l: 0x82}, CPU{a: 0x1a, l: 0x82}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
	// {"ADC", "A", "d8", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "d8", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "d8", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
	// {"ADC", "A", "d8", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true, "H": false, "C": false}, nil},

	///////////////////////

	// {"ADC", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8, f: 0x00}, CPU{a: 0x3c, h: 0xa7, l: 0xf8, f: 0x00}, map[string]bool{"Z": false, "H": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0x22}}},
	// {"ADC", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8, f: 0x00}, CPU{a: 0x0c, h: 0xa7, l: 0xf8, f: 0x00}, map[string]bool{"Z": false, "H": false, "C": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xf2}}},
	// {"ADC", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8, f: 0x00}, CPU{a: 0x45, h: 0xa7, l: 0xf8, f: 0x00}, map[string]bool{"Z": false, "H": true, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0x2b}}},
	// {"ADC", "A", "(HL)", 0x00, 0x00p00, CPU{a: 0x00, h: 0xa7, l: 0xf8, f: 0x00}, CPU{a: 0x00, h: 0xa7, l: 0xf8, f: 0x00}, map[string]bool{"Z": true, "H": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0x00}}},
	// {"ADC", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8, f: cFlag}, CPU{a: 0x3d, h: 0xa7, l: 0xf8, f: cFlag}, map[string]bool{"Z": false, "H": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0x22}}},
	// {"ADC", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8, f: cFlag}, CPU{a: 0x0d, h: 0xa7, l: 0xf8, f: cFlag}, map[string]bool{"Z": false, "H": false, "C": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xf2}}},
	// {"ADC", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8, f: cFlag}, CPU{a: 0x46, h: 0xa7, l: 0xf8, f: cFlag}, map[string]bool{"Z": false, "H": true, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0x2b}}},
	// {"ADC", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x00, h: 0xa7, l: 0xf8, f: cFlag}, CPU{a: 0x00, h: 0xa7, l: 0xf8, f: cFlag}, map[string]bool{"Z": true, "H": true, "C": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xff}}},

	// {"ADC", "A", "A", 0x00, 0x0000, CPU{a: 0x12, f: 0x00}, CPU{a: 0x24, f: 0x00}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "A", 0x00, 0x0000, CPU{a: 0xa3, f: 0x00}, CPU{a: 0x46, f: 0x00}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "A", 0x00, 0x0000, CPU{a: 0x1a, f: 0x00}, CPU{a: 0x34, f: 0x00}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
	// {"ADC", "A", "A", 0x00, 0x0000, CPU{a: 0x00, f: 0x00}, CPU{a: 0x00, f: 0x00}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
	// {"ADC", "A", "A", 0x00, 0x0000, CPU{a: 0x12, f: cFlag}, CPU{a: 0x25, f: cFlag}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "A", 0x00, 0x0000, CPU{a: 0xa3, f: cFlag}, CPU{a: 0x47, f: cFlag}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "A", 0x00, 0x0000, CPU{a: 0x1a, f: cFlag}, CPU{a: 0x35, f: cFlag}, map[string]bool{"Z": false, "H": true, "C": false}, nil},

	///////////////////////

	// {"ADC", "A", "B", 0x00, 0x0000, CPU{a: 0x1a, b: 0x22}, CPU{a: 0x3c, b: 0x22}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "B", 0x00, 0x0000, CPU{a: 0x1a, b: 0xf2}, CPU{a: 0x0c, b: 0xf2}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "B", 0x00, 0x0000, CPU{a: 0x1a, b: 0x2b}, CPU{a: 0x45, b: 0x2b}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
	// {"ADC", "A", "B", 0x00, 0x0000, CPU{a: 0x00, b: 0x00}, CPU{a: 0x00, b: 0x00}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
	// {"ADC", "A", "C", 0x00, 0x0000, CPU{a: 0x1a, c: 0x22}, CPU{a: 0x3c, c: 0x22}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "C", 0x00, 0x0000, CPU{a: 0x1a, c: 0xf2}, CPU{a: 0x0c, c: 0xf2}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "C", 0x00, 0x0000, CPU{a: 0x1a, c: 0x2b}, CPU{a: 0x45, c: 0x2b}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
	// {"ADC", "A", "C", 0x00, 0x0000, CPU{a: 0x00, c: 0x00}, CPU{a: 0x00, c: 0x00}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
	// {"ADC", "A", "D", 0x00, 0x0000, CPU{a: 0x1a, d: 0x22}, CPU{a: 0x3c, d: 0x22}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "D", 0x00, 0x0000, CPU{a: 0x1a, d: 0xf2}, CPU{a: 0x0c, d: 0xf2}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "D", 0x00, 0x0000, CPU{a: 0x1a, d: 0x2b}, CPU{a: 0x45, d: 0x2b}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
	// {"ADC", "A", "D", 0x00, 0x0000, CPU{a: 0x00, d: 0x00}, CPU{a: 0x00, d: 0x00}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
	// {"ADC", "A", "E", 0x00, 0x0000, CPU{a: 0x1a, e: 0x22}, CPU{a: 0x3c, e: 0x22}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "E", 0x00, 0x0000, CPU{a: 0x1a, e: 0xf2}, CPU{a: 0x0c, e: 0xf2}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "E", 0x00, 0x0000, CPU{a: 0x1a, e: 0x2b}, CPU{a: 0x45, e: 0x2b}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
	// {"ADC", "A", "E", 0x00, 0x0000, CPU{a: 0x00, e: 0x00}, CPU{a: 0x00, e: 0x00}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
	// {"ADC", "A", "H", 0x00, 0x0000, CPU{a: 0x1a, h: 0x22}, CPU{a: 0x3c, h: 0x22}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "H", 0x00, 0x0000, CPU{a: 0x1a, h: 0xf2}, CPU{a: 0x0c, h: 0xf2}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "H", 0x00, 0x0000, CPU{a: 0x1a, h: 0x2b}, CPU{a: 0x45, h: 0x2b}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
	// {"ADC", "A", "H", 0x00, 0x0000, CPU{a: 0x00, h: 0x00}, CPU{a: 0x00, h: 0x00}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
	// {"ADC", "A", "L", 0x00, 0x0000, CPU{a: 0x1a, l: 0x22}, CPU{a: 0x3c, l: 0x22}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "L", 0x00, 0x0000, CPU{a: 0x1a, l: 0xf2}, CPU{a: 0x0c, l: 0xf2}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "L", 0x00, 0x0000, CPU{a: 0x1a, l: 0x2b}, CPU{a: 0x45, l: 0x2b}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
	// {"ADC", "A", "L", 0x00, 0x0000, CPU{a: 0x00, l: 0x00}, CPU{a: 0x00, l: 0x00}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
	// {"ADC", "A", "d8", 0x22, 0x0000, CPU{a: 0x1a}, CPU{a: 0x3c}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
	// {"ADC", "A", "d8", 0xf2, 0x0000, CPU{a: 0x1a}, CPU{a: 0x0c}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
	// {"ADC", "A", "d8", 0x2b, 0x0000, CPU{a: 0x1a}, CPU{a: 0x45}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
	// {"ADC", "A", "d8", 0x00, 0x0000, CPU{a: 0x00}, CPU{a: 0x00}, map[string]bool{"Z": true, "H": false, "C": false}, nil},

	///////////////////////
	// GOOD

	// {"ADD", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, CPU{a: 0x3c, h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0x22}}},
	// {"ADD", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, CPU{a: 0x0c, h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": false, "C": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xf2}}},
	// {"ADD", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, CPU{a: 0x45, h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": true, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0x2b}}},
	// {"ADD", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x00, h: 0xa7, l: 0xf8}, CPU{a: 0x00, h: 0xa7, l: 0xf8}, map[string]bool{"Z": true, "H": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0x00}}},
	{0x87, 0x00, 0x0000, CPU{a: 0x12}, CPU{a: 0x24}, nil},
	{0x87, 0x00, 0x0000, CPU{a: 0xa3}, CPU{a: 0x46, cf: true}, nil},
	{0x87, 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x34, hf: true}, nil},
	{0x87, 0x00, 0x0000, CPU{a: 0x00}, CPU{a: 0x00, zf: true}, nil},
	{0x80, 0x00, 0x0000, CPU{a: 0x1a, b: 0x22}, CPU{a: 0x3c, b: 0x22}, nil},
	{0x80, 0x00, 0x0000, CPU{a: 0x1a, b: 0xf2}, CPU{a: 0x0c, b: 0xf2, cf: true}, nil},
	{0x80, 0x00, 0x0000, CPU{a: 0x1a, b: 0x2b}, CPU{a: 0x45, b: 0x2b, hf: true}, nil},
	{0x80, 0x00, 0x0000, CPU{a: 0x00, b: 0x00}, CPU{a: 0x00, b: 0x00, zf: true}, nil}}

// {"ADD", "A", "C", 0x00, 0x0000, CPU{a: 0x1a, c: 0x22}, CPU{a: 0x3c, c: 0x22}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"ADD", "A", "C", 0x00, 0x0000, CPU{a: 0x1a, c: 0xf2}, CPU{a: 0x0c, c: 0xf2}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"ADD", "A", "C", 0x00, 0x0000, CPU{a: 0x1a, c: 0x2b}, CPU{a: 0x45, c: 0x2b}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"ADD", "A", "C", 0x00, 0x0000, CPU{a: 0x00, c: 0x00}, CPU{a: 0x00, c: 0x00}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"ADD", "A", "D", 0x00, 0x0000, CPU{a: 0x1a, d: 0x22}, CPU{a: 0x3c, d: 0x22}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"ADD", "A", "D", 0x00, 0x0000, CPU{a: 0x1a, d: 0xf2}, CPU{a: 0x0c, d: 0xf2}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"ADD", "A", "D", 0x00, 0x0000, CPU{a: 0x1a, d: 0x2b}, CPU{a: 0x45, d: 0x2b}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"ADD", "A", "D", 0x00, 0x0000, CPU{a: 0x00, d: 0x00}, CPU{a: 0x00, d: 0x00}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"ADD", "A", "E", 0x00, 0x0000, CPU{a: 0x1a, e: 0x22}, CPU{a: 0x3c, e: 0x22}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"ADD", "A", "E", 0x00, 0x0000, CPU{a: 0x1a, e: 0xf2}, CPU{a: 0x0c, e: 0xf2}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"ADD", "A", "E", 0x00, 0x0000, CPU{a: 0x1a, e: 0x2b}, CPU{a: 0x45, e: 0x2b}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"ADD", "A", "E", 0x00, 0x0000, CPU{a: 0x00, e: 0x00}, CPU{a: 0x00, e: 0x00}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"ADD", "A", "H", 0x00, 0x0000, CPU{a: 0x1a, h: 0x22}, CPU{a: 0x3c, h: 0x22}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"ADD", "A", "H", 0x00, 0x0000, CPU{a: 0x1a, h: 0xf2}, CPU{a: 0x0c, h: 0xf2}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"ADD", "A", "H", 0x00, 0x0000, CPU{a: 0x1a, h: 0x2b}, CPU{a: 0x45, h: 0x2b}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"ADD", "A", "H", 0x00, 0x0000, CPU{a: 0x00, h: 0x00}, CPU{a: 0x00, h: 0x00}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"ADD", "A", "L", 0x00, 0x0000, CPU{a: 0x1a, l: 0x22}, CPU{a: 0x3c, l: 0x22}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"ADD", "A", "L", 0x00, 0x0000, CPU{a: 0x1a, l: 0xf2}, CPU{a: 0x0c, l: 0xf2}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"ADD", "A", "L", 0x00, 0x0000, CPU{a: 0x1a, l: 0x2b}, CPU{a: 0x45, l: 0x2b}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"ADD", "A", "L", 0x00, 0x0000, CPU{a: 0x00, l: 0x00}, CPU{a: 0x00, l: 0x00}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"ADD", "A", "d8", 0x22, 0x0000, CPU{a: 0x1a}, CPU{a: 0x3c}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"ADD", "A", "d8", 0xf2, 0x0000, CPU{a: 0x1a}, CPU{a: 0x0c}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"ADD", "A", "d8", 0x2b, 0x0000, CPU{a: 0x1a}, CPU{a: 0x45}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"ADD", "A", "d8", 0x00, 0x0000, CPU{a: 0x00}, CPU{a: 0x00}, map[string]bool{"Z": true, "H": false, "C": false}, nil},

///////////////////////

// {"ADD", "HL", "BC", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8, b: 0xb3, c: 0xc4}, CPU{h: 0xa7, l: 0xf8, b: 0xb3, c: 0xc4}, map[string]bool{"H": false, "C": false}, nil},
// {"ADD", "HL", "BC", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8, b: 0xb3, c: 0xc4}, CPU{h: 0xa7, l: 0xf8, b: 0xb3, c: 0xc4}, map[string]bool{"H": false, "C": true}, nil},
// {"ADD", "HL", "BC", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8, b: 0xb3, c: 0xc4}, CPU{h: 0xa7, l: 0xf8, b: 0xb3, c: 0xc4}, map[string]bool{"H": true, "C": false}, nil},
// {"ADD", "HL", "DE", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8, d: 0xd5, e: 0xe6}, CPU{h: 0xa7, l: 0xf8, d: 0xd5, e: 0xe6}, map[string]bool{"H": false, "C": false}, nil},
// {"ADD", "HL", "DE", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8, d: 0xd5, e: 0xe6}, CPU{h: 0xa7, l: 0xf8, d: 0xd5, e: 0xe6}, map[string]bool{"H": false, "C": true}, nil},
// {"ADD", "HL", "DE", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8, d: 0xd5, e: 0xe6}, CPU{h: 0xa7, l: 0xf8, d: 0xd5, e: 0xe6}, map[string]bool{"H": true, "C": false}, nil},
// {"ADD", "HL", "HL", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"H": false, "C": false}, nil},
// {"ADD", "HL", "HL", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"H": false, "C": true}, nil},
// {"ADD", "HL", "HL", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"H": true, "C": false}, nil},
// {"ADD", "HL", "SP", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"H": false, "C": false}, nil},
// {"ADD", "HL", "SP", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"H": false, "C": true}, nil},
// {"ADD", "HL", "SP", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"H": true, "C": false}, nil},
// {"ADD", "SP", "r8", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"H": false, "C": false}, nil},
// {"ADD", "SP", "r8", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"H": false, "C": true}, nil},
// {"ADD", "SP", "r8", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"H": true, "C": false}, nil},
// {"AND", "(HL)", "", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, CPU{a: 0x12, h: 0xa7, l: 0xf8}, map[string]bool{"Z": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0x33}}},
// {"AND", "(HL)", "", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, CPU{a: 0x00, h: 0xa7, l: 0xf8}, map[string]bool{"Z": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0x21}}},

///////////////////////
// GOOD

// 	{"AND", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false}, nil},
// 	{"AND", "A", "", 0x00, 0x0000, CPU{a: 0x00}, CPU{a: 0x00}, map[string]bool{"Z": true}, nil},
// 	{"AND", "B", "", 0x00, 0x0000, CPU{a: 0x1a, b: 0x33}, CPU{a: 0x12, b: 0x33}, map[string]bool{"Z": false}, nil},
// 	{"AND", "B", "", 0x00, 0x0000, CPU{a: 0x1a, b: 0x21}, CPU{a: 0x00, b: 0x21}, map[string]bool{"Z": true}, nil},
// 	{"AND", "C", "", 0x00, 0x0000, CPU{a: 0x1a, c: 0x33}, CPU{a: 0x12, c: 0x33}, map[string]bool{"Z": false}, nil},
// 	{"AND", "C", "", 0x00, 0x0000, CPU{a: 0x1a, c: 0x21}, CPU{a: 0x00, c: 0x21}, map[string]bool{"Z": true}, nil},
// 	{"AND", "D", "", 0x00, 0x0000, CPU{a: 0x1a, d: 0x33}, CPU{a: 0x12, d: 0x33}, map[string]bool{"Z": false}, nil},
// 	{"AND", "D", "", 0x00, 0x0000, CPU{a: 0x1a, d: 0x21}, CPU{a: 0x00, d: 0x21}, map[string]bool{"Z": true}, nil},
// 	{"AND", "E", "", 0x00, 0x0000, CPU{a: 0x1a, e: 0x33}, CPU{a: 0x12, e: 0x33}, map[string]bool{"Z": false}, nil},
// 	{"AND", "E", "", 0x00, 0x0000, CPU{a: 0x1a, e: 0x21}, CPU{a: 0x00, e: 0x21}, map[string]bool{"Z": true}, nil},
// 	{"AND", "H", "", 0x00, 0x0000, CPU{a: 0x1a, h: 0x33}, CPU{a: 0x12, h: 0x33}, map[string]bool{"Z": false}, nil},
// 	{"AND", "H", "", 0x00, 0x0000, CPU{a: 0x1a, h: 0x21}, CPU{a: 0x00, h: 0x21}, map[string]bool{"Z": true}, nil},
// 	{"AND", "L", "", 0x00, 0x0000, CPU{a: 0x1a, l: 0x33}, CPU{a: 0x12, l: 0x33}, map[string]bool{"Z": false}, nil},
// 	{"AND", "L", "", 0x00, 0x0000, CPU{a: 0x1a, l: 0x21}, CPU{a: 0x00, l: 0x21}, map[string]bool{"Z": true}, nil},
// 	{"AND", "d8", "", 0x33, 0x0000, CPU{a: 0x1a}, CPU{a: 0x12}, map[string]bool{"Z": false}, nil},
// 	{"AND", "d8", "", 0x21, 0x0000, CPU{a: 0x1a}, CPU{a: 0x00}, map[string]bool{"Z": true}, nil}}

///////////////////////

// {"BIT", "0", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"BIT", "0", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"BIT", "0", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false}, nil},
// {"BIT", "0", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true}, nil},
// {"BIT", "0", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false}, nil},
// {"BIT", "0", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true}, nil},
// {"BIT", "0", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false}, nil},
// {"BIT", "0", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true}, nil},
// {"BIT", "0", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false}, nil},
// {"BIT", "0", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true}, nil},
// {"BIT", "0", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false}, nil},
// {"BIT", "0", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true}, nil},
// {"BIT", "0", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false}, nil},
// {"BIT", "0", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true}, nil},
// {"BIT", "0", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false}, nil},
// {"BIT", "0", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true}, nil},
// {"BIT", "1", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"BIT", "1", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"BIT", "1", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false}, nil},
// {"BIT", "1", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true}, nil},
// {"BIT", "1", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false}, nil},
// {"BIT", "1", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true}, nil},
// {"BIT", "1", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false}, nil},
// {"BIT", "1", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true}, nil},
// {"BIT", "1", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false}, nil},
// {"BIT", "1", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true}, nil},
// {"BIT", "1", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false}, nil},
// {"BIT", "1", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true}, nil},
// {"BIT", "1", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false}, nil},
// {"BIT", "1", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true}, nil},
// {"BIT", "1", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false}, nil},
// {"BIT", "1", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true}, nil},
// {"BIT", "2", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"BIT", "2", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"BIT", "2", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false}, nil},
// {"BIT", "2", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true}, nil},
// {"BIT", "2", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false}, nil},
// {"BIT", "2", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true}, nil},
// {"BIT", "2", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false}, nil},
// {"BIT", "2", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true}, nil},
// {"BIT", "2", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false}, nil},
// {"BIT", "2", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true}, nil},
// {"BIT", "2", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false}, nil},
// {"BIT", "2", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true}, nil},
// {"BIT", "2", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false}, nil},
// {"BIT", "2", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true}, nil},
// {"BIT", "2", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false}, nil},
// {"BIT", "2", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true}, nil},
// {"BIT", "3", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"BIT", "3", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"BIT", "3", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false}, nil},
// {"BIT", "3", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true}, nil},
// {"BIT", "3", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false}, nil},
// {"BIT", "3", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true}, nil},
// {"BIT", "3", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false}, nil},
// {"BIT", "3", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true}, nil},
// {"BIT", "3", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false}, nil},
// {"BIT", "3", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true}, nil},
// {"BIT", "3", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false}, nil},
// {"BIT", "3", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true}, nil},
// {"BIT", "3", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false}, nil},
// {"BIT", "3", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true}, nil},
// {"BIT", "3", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false}, nil},
// {"BIT", "3", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true}, nil},
// {"BIT", "4", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"BIT", "4", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"BIT", "4", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false}, nil},
// {"BIT", "4", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true}, nil},
// {"BIT", "4", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false}, nil},
// {"BIT", "4", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true}, nil},
// {"BIT", "4", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false}, nil},
// {"BIT", "4", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true}, nil},
// {"BIT", "4", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false}, nil},
// {"BIT", "4", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true}, nil},
// {"BIT", "4", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false}, nil},
// {"BIT", "4", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true}, nil},
// {"BIT", "4", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false}, nil},
// {"BIT", "4", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true}, nil},
// {"BIT", "4", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false}, nil},
// {"BIT", "4", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true}, nil},
// {"BIT", "5", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"BIT", "5", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"BIT", "5", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false}, nil},
// {"BIT", "5", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true}, nil},
// {"BIT", "5", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false}, nil},
// {"BIT", "5", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true}, nil},
// {"BIT", "5", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false}, nil},
// {"BIT", "5", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true}, nil},
// {"BIT", "5", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false}, nil},
// {"BIT", "5", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true}, nil},
// {"BIT", "5", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false}, nil},
// {"BIT", "5", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true}, nil},
// {"BIT", "5", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false}, nil},
// {"BIT", "5", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true}, nil},
// {"BIT", "5", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false}, nil},
// {"BIT", "5", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true}, nil},
// {"BIT", "6", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"BIT", "6", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"BIT", "6", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false}, nil},
// {"BIT", "6", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true}, nil},
// {"BIT", "6", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false}, nil},
// {"BIT", "6", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true}, nil},
// {"BIT", "6", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false}, nil},
// {"BIT", "6", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true}, nil},
// {"BIT", "6", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false}, nil},
// {"BIT", "6", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true}, nil},
// {"BIT", "6", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false}, nil},
// {"BIT", "6", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true}, nil},
// {"BIT", "6", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false}, nil},
// {"BIT", "6", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true}, nil},
// {"BIT", "6", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false}, nil},
// {"BIT", "6", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true}, nil},
// {"BIT", "7", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"BIT", "7", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"BIT", "7", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false}, nil},
// {"BIT", "7", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true}, nil},
// {"BIT", "7", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false}, nil},
// {"BIT", "7", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true}, nil},
// {"BIT", "7", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false}, nil},
// {"BIT", "7", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true}, nil},
// {"BIT", "7", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false}, nil},
// {"BIT", "7", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true}, nil},
// {"BIT", "7", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false}, nil},
// {"BIT", "7", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true}, nil},
// {"BIT", "7", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false}, nil},
// {"BIT", "7", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true}, nil},
// {"BIT", "7", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false}, nil},
// {"BIT", "7", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true}, nil},
// {"CALL", "C", "a16", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"CALL", "NC", "a16", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"CALL", "NZ", "a16", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"CALL", "Z", "a16", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"CALL", "a16", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"CCF", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"C": false}, nil},
// {"CCF", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"C": true}, nil},
// {"CP", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"CP", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": false, "C": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"CP", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": true, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"CP", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true, "H": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"CP", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"CP", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"CP", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"CP", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"CP", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"CP", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"CP", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"CP", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"CP", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"CP", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"CP", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"CP", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"CP", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"CP", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"CP", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"CP", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"CP", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"CP", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"CP", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"CP", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"CP", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"CP", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"CP", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"CP", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"CP", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"CP", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"CP", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"CP", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"CP", "d8", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"CP", "d8", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"CP", "d8", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"CP", "d8", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"CPL", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"DAA", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"Z": false, "C": false}, nil},
// {"DAA", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"Z": false, "C": true}, nil},
// {"DAA", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"Z": true, "C": false}, nil},
// {"DEC", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"DEC", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"DEC", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true, "H": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"DEC", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": false}, nil},
// {"DEC", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": true}, nil},
// {"DEC", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true, "H": false}, nil},
// {"DEC", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "H": false}, nil},
// {"DEC", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "H": true}, nil},
// {"DEC", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true, "H": false}, nil},
// {"DEC", "BC", "", 0x00, 0x0000, CPU{b: 0xb3, c: 0xc4}, CPU{b: 0xb3, c: 0xc4}, map[string]bool{}, nil},
// {"DEC", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "H": false}, nil},
// {"DEC", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "H": true}, nil},
// {"DEC", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true, "H": false}, nil},
// {"DEC", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "H": false}, nil},
// {"DEC", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "H": true}, nil},
// {"DEC", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true, "H": false}, nil},
// {"DEC", "DE", "", 0x00, 0x0000, CPU{d: 0xd5, e: 0xe6}, CPU{d: 0xd5, e: 0xe6}, map[string]bool{}, nil},
// {"DEC", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "H": false}, nil},
// {"DEC", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "H": true}, nil},
// {"DEC", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true, "H": false}, nil},
// {"DEC", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "H": false}, nil},
// {"DEC", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "H": true}, nil},
// {"DEC", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true, "H": false}, nil},
// {"DEC", "HL", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, nil},
// {"DEC", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "H": false}, nil},
// {"DEC", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "H": true}, nil},
// {"DEC", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true, "H": false}, nil},
// {"DEC", "SP", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"DI", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"EI", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"HALT", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"INC", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"INC", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"INC", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true, "H": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"INC", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": false}, nil},
// {"INC", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": true}, nil},
// {"INC", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true, "H": false}, nil},
// {"INC", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "H": false}, nil},
// {"INC", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "H": true}, nil},
// {"INC", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true, "H": false}, nil},
// {"INC", "BC", "", 0x00, 0x0000, CPU{b: 0xb3, c: 0xc4}, CPU{b: 0xb3, c: 0xc4}, map[string]bool{}, nil},
// {"INC", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "H": false}, nil},
// {"INC", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "H": true}, nil},
// {"INC", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true, "H": false}, nil},
// {"INC", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "H": false}, nil},
// {"INC", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "H": true}, nil},
// {"INC", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true, "H": false}, nil},
// {"INC", "DE", "", 0x00, 0x0000, CPU{d: 0xd5, e: 0xe6}, CPU{d: 0xd5, e: 0xe6}, map[string]bool{}, nil},
// {"INC", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "H": false}, nil},
// {"INC", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "H": true}, nil},
// {"INC", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true, "H": false}, nil},
// {"INC", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "H": false}, nil},
// {"INC", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "H": true}, nil},
// {"INC", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true, "H": false}, nil},
// {"INC", "HL", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, nil},
// {"INC", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "H": false}, nil},
// {"INC", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "H": true}, nil},
// {"INC", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true, "H": false}, nil},
// {"INC", "SP", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"JP", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"JP", "C", "a16", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"JP", "NC", "a16", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"JP", "NZ", "a16", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"JP", "Z", "a16", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"JP", "a16", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"JR", "C", "r8", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"JR", "NC", "r8", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"JR", "NZ", "r8", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"JR", "Z", "r8", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"JR", "r8", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"LD", "(BC)", "A", 0x00, 0x0000, CPU{b: 0xb3, c: 0xc4, a: 0x1a}, CPU{b: 0xb3, c: 0xc4, a: 0x1a}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xb3c4: 0xaa}}},
// {"LD", "(C)", "A", 0x00, 0x0000, CPU{c: 0x3c, a: 0x1a}, CPU{c: 0x3c, a: 0x1a}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xff3c: 0x44}}},
// {"LD", "(DE)", "A", 0x00, 0x0000, CPU{d: 0xd5, e: 0xe6, a: 0x1a}, CPU{d: 0xd5, e: 0xe6, a: 0x1a}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xd5e6: 0xbb}}},
// {"LD", "(HL)", "A", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8, a: 0x1a}, CPU{h: 0xa7, l: 0xf8, a: 0x1a}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "(HL)", "B", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8, b: 0x2b}, CPU{h: 0xa7, l: 0xf8, b: 0x2b}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "(HL)", "C", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8, c: 0x3c}, CPU{h: 0xa7, l: 0xf8, c: 0x3c}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "(HL)", "D", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8, d: 0x4d}, CPU{h: 0xa7, l: 0xf8, d: 0x4d}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "(HL)", "E", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8, e: 0x5e}, CPU{h: 0xa7, l: 0xf8, e: 0x5e}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "(HL)", "H", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "(HL)", "L", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "(HL)", "d8", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "(HL+)", "A", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8, a: 0x1a}, CPU{h: 0xa7, l: 0xf8, a: 0x1a}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "(HL-)", "A", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8, a: 0x1a}, CPU{h: 0xa7, l: 0xf8, a: 0x1a}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "(a16)", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"LD", "(a16)", "SP", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"LD", "A", "(BC)", 0x00, 0x0000, CPU{a: 0x1a, b: 0xb3, c: 0xc4}, CPU{a: 0x1a, b: 0xb3, c: 0xc4}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xb3c4: 0xaa}}},
// {"LD", "A", "(C)", 0x00, 0x0000, CPU{a: 0x1a, c: 0x3c}, CPU{a: 0x1a, c: 0x3c}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xff3c: 0x44}}},
// {"LD", "A", "(DE)", 0x00, 0x0000, CPU{a: 0x1a, d: 0xd5, e: 0xe6}, CPU{a: 0x1a, d: 0xd5, e: 0xe6}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xd5e6: 0xbb}}},
// {"LD", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "A", "(HL+)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "A", "(HL-)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "A", "(a16)", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"LD", "A", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"LD", "A", "B", 0x00, 0x0000, CPU{a: 0x1a, b: 0x2b}, CPU{a: 0x1a, b: 0x2b}, map[string]bool{}, nil},
// {"LD", "A", "C", 0x00, 0x0000, CPU{a: 0x1a, c: 0x3c}, CPU{a: 0x1a, c: 0x3c}, map[string]bool{}, nil},
// {"LD", "A", "D", 0x00, 0x0000, CPU{a: 0x1a, d: 0x4d}, CPU{a: 0x1a, d: 0x4d}, map[string]bool{}, nil},
// {"LD", "A", "E", 0x00, 0x0000, CPU{a: 0x1a, e: 0x5e}, CPU{a: 0x1a, e: 0x5e}, map[string]bool{}, nil},
// {"LD", "A", "H", 0x00, 0x0000, CPU{a: 0x1a, h: 0x71}, CPU{a: 0x1a, h: 0x71}, map[string]bool{}, nil},
// {"LD", "A", "L", 0x00, 0x0000, CPU{a: 0x1a, l: 0x82}, CPU{a: 0x1a, l: 0x82}, map[string]bool{}, nil},
// {"LD", "A", "d8", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"LD", "B", "(HL)", 0x00, 0x0000, CPU{b: 0x2b, h: 0xa7, l: 0xf8}, CPU{b: 0x2b, h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "B", "A", 0x00, 0x0000, CPU{b: 0x2b, a: 0x1a}, CPU{b: 0x2b, a: 0x1a}, map[string]bool{}, nil},
// {"LD", "B", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"LD", "B", "C", 0x00, 0x0000, CPU{b: 0x2b, c: 0x3c}, CPU{b: 0x2b, c: 0x3c}, map[string]bool{}, nil},
// {"LD", "B", "D", 0x00, 0x0000, CPU{b: 0x2b, d: 0x4d}, CPU{b: 0x2b, d: 0x4d}, map[string]bool{}, nil},
// {"LD", "B", "E", 0x00, 0x0000, CPU{b: 0x2b, e: 0x5e}, CPU{b: 0x2b, e: 0x5e}, map[string]bool{}, nil},
// {"LD", "B", "H", 0x00, 0x0000, CPU{b: 0x2b, h: 0x71}, CPU{b: 0x2b, h: 0x71}, map[string]bool{}, nil},
// {"LD", "B", "L", 0x00, 0x0000, CPU{b: 0x2b, l: 0x82}, CPU{b: 0x2b, l: 0x82}, map[string]bool{}, nil},
// {"LD", "B", "d8", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"LD", "BC", "d16", 0x00, 0x0000, CPU{b: 0xb3, c: 0xc4}, CPU{b: 0xb3, c: 0xc4}, map[string]bool{}, nil},
// {"LD", "C", "(HL)", 0x00, 0x0000, CPU{c: 0x3c, h: 0xa7, l: 0xf8}, CPU{c: 0x3c, h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "C", "A", 0x00, 0x0000, CPU{c: 0x3c, a: 0x1a}, CPU{c: 0x3c, a: 0x1a}, map[string]bool{}, nil},
// {"LD", "C", "B", 0x00, 0x0000, CPU{c: 0x3c, b: 0x2b}, CPU{c: 0x3c, b: 0x2b}, map[string]bool{}, nil},
// {"LD", "C", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"LD", "C", "D", 0x00, 0x0000, CPU{c: 0x3c, d: 0x4d}, CPU{c: 0x3c, d: 0x4d}, map[string]bool{}, nil},
// {"LD", "C", "E", 0x00, 0x0000, CPU{c: 0x3c, e: 0x5e}, CPU{c: 0x3c, e: 0x5e}, map[string]bool{}, nil},
// {"LD", "C", "H", 0x00, 0x0000, CPU{c: 0x3c, h: 0x71}, CPU{c: 0x3c, h: 0x71}, map[string]bool{}, nil},
// {"LD", "C", "L", 0x00, 0x0000, CPU{c: 0x3c, l: 0x82}, CPU{c: 0x3c, l: 0x82}, map[string]bool{}, nil},
// {"LD", "C", "d8", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"LD", "D", "(HL)", 0x00, 0x0000, CPU{d: 0x4d, h: 0xa7, l: 0xf8}, CPU{d: 0x4d, h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "D", "A", 0x00, 0x0000, CPU{d: 0x4d, a: 0x1a}, CPU{d: 0x4d, a: 0x1a}, map[string]bool{}, nil},
// {"LD", "D", "B", 0x00, 0x0000, CPU{d: 0x4d, b: 0x2b}, CPU{d: 0x4d, b: 0x2b}, map[string]bool{}, nil},
// {"LD", "D", "C", 0x00, 0x0000, CPU{d: 0x4d, c: 0x3c}, CPU{d: 0x4d, c: 0x3c}, map[string]bool{}, nil},
// {"LD", "D", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"LD", "D", "E", 0x00, 0x0000, CPU{d: 0x4d, e: 0x5e}, CPU{d: 0x4d, e: 0x5e}, map[string]bool{}, nil},
// {"LD", "D", "H", 0x00, 0x0000, CPU{d: 0x4d, h: 0x71}, CPU{d: 0x4d, h: 0x71}, map[string]bool{}, nil},
// {"LD", "D", "L", 0x00, 0x0000, CPU{d: 0x4d, l: 0x82}, CPU{d: 0x4d, l: 0x82}, map[string]bool{}, nil},
// {"LD", "D", "d8", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"LD", "DE", "d16", 0x00, 0x0000, CPU{d: 0xd5, e: 0xe6}, CPU{d: 0xd5, e: 0xe6}, map[string]bool{}, nil},
// {"LD", "E", "(HL)", 0x00, 0x0000, CPU{e: 0x5e, h: 0xa7, l: 0xf8}, CPU{e: 0x5e, h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "E", "A", 0x00, 0x0000, CPU{e: 0x5e, a: 0x1a}, CPU{e: 0x5e, a: 0x1a}, map[string]bool{}, nil},
// {"LD", "E", "B", 0x00, 0x0000, CPU{e: 0x5e, b: 0x2b}, CPU{e: 0x5e, b: 0x2b}, map[string]bool{}, nil},
// {"LD", "E", "C", 0x00, 0x0000, CPU{e: 0x5e, c: 0x3c}, CPU{e: 0x5e, c: 0x3c}, map[string]bool{}, nil},
// {"LD", "E", "D", 0x00, 0x0000, CPU{e: 0x5e, d: 0x4d}, CPU{e: 0x5e, d: 0x4d}, map[string]bool{}, nil},
// {"LD", "E", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"LD", "E", "H", 0x00, 0x0000, CPU{e: 0x5e, h: 0x71}, CPU{e: 0x5e, h: 0x71}, map[string]bool{}, nil},
// {"LD", "E", "L", 0x00, 0x0000, CPU{e: 0x5e, l: 0x82}, CPU{e: 0x5e, l: 0x82}, map[string]bool{}, nil},
// {"LD", "E", "d8", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"LD", "H", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "H", "A", 0x00, 0x0000, CPU{h: 0x71, a: 0x1a}, CPU{h: 0x71, a: 0x1a}, map[string]bool{}, nil},
// {"LD", "H", "B", 0x00, 0x0000, CPU{h: 0x71, b: 0x2b}, CPU{h: 0x71, b: 0x2b}, map[string]bool{}, nil},
// {"LD", "H", "C", 0x00, 0x0000, CPU{h: 0x71, c: 0x3c}, CPU{h: 0x71, c: 0x3c}, map[string]bool{}, nil},
// {"LD", "H", "D", 0x00, 0x0000, CPU{h: 0x71, d: 0x4d}, CPU{h: 0x71, d: 0x4d}, map[string]bool{}, nil},
// {"LD", "H", "E", 0x00, 0x0000, CPU{h: 0x71, e: 0x5e}, CPU{h: 0x71, e: 0x5e}, map[string]bool{}, nil},
// {"LD", "H", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"LD", "H", "L", 0x00, 0x0000, CPU{h: 0x71, l: 0x82}, CPU{h: 0x71, l: 0x82}, map[string]bool{}, nil},
// {"LD", "H", "d8", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"LD", "HL", "SP+r8", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"H": false, "C": false}, nil},
// {"LD", "HL", "SP+r8", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"H": false, "C": true}, nil},
// {"LD", "HL", "SP+r8", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"H": true, "C": false}, nil},
// {"LD", "HL", "d16", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, nil},
// {"LD", "L", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"LD", "L", "A", 0x00, 0x0000, CPU{l: 0x82, a: 0x1a}, CPU{l: 0x82, a: 0x1a}, map[string]bool{}, nil},
// {"LD", "L", "B", 0x00, 0x0000, CPU{l: 0x82, b: 0x2b}, CPU{l: 0x82, b: 0x2b}, map[string]bool{}, nil},
// {"LD", "L", "C", 0x00, 0x0000, CPU{l: 0x82, c: 0x3c}, CPU{l: 0x82, c: 0x3c}, map[string]bool{}, nil},
// {"LD", "L", "D", 0x00, 0x0000, CPU{l: 0x82, d: 0x4d}, CPU{l: 0x82, d: 0x4d}, map[string]bool{}, nil},
// {"LD", "L", "E", 0x00, 0x0000, CPU{l: 0x82, e: 0x5e}, CPU{l: 0x82, e: 0x5e}, map[string]bool{}, nil},
// {"LD", "L", "H", 0x00, 0x0000, CPU{l: 0x82, h: 0x71}, CPU{l: 0x82, h: 0x71}, map[string]bool{}, nil},
// {"LD", "L", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"LD", "L", "d8", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"LD", "SP", "HL", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, nil},
// {"LD", "SP", "d16", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"LDH", "(a8)", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"LDH", "A", "(a8)", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"NOP", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"OR", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"OR", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"OR", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false}, nil},
// {"OR", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true}, nil},
// {"OR", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false}, nil},
// {"OR", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true}, nil},
// {"OR", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false}, nil},
// {"OR", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true}, nil},
// {"OR", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false}, nil},
// {"OR", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true}, nil},
// {"OR", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false}, nil},
// {"OR", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true}, nil},
// {"OR", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false}, nil},
// {"OR", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true}, nil},
// {"OR", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false}, nil},
// {"OR", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true}, nil},
// {"OR", "d8", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"Z": false}, nil},
// {"OR", "d8", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"Z": true}, nil},
// {"POP", "AF", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "N": false, "H": false, "C": false}, nil},
// {"POP", "AF", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "N": false, "H": false, "C": true}, nil},
// {"POP", "AF", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "N": false, "H": true, "C": false}, nil},
// {"POP", "AF", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "N": true, "H": false, "C": false}, nil},
// {"POP", "AF", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true, "N": false, "H": false, "C": false}, nil},
// {"POP", "BC", "", 0x00, 0x0000, CPU{b: 0xb3, c: 0xc4}, CPU{b: 0xb3, c: 0xc4}, map[string]bool{}, nil},
// {"POP", "DE", "", 0x00, 0x0000, CPU{d: 0xd5, e: 0xe6}, CPU{d: 0xd5, e: 0xe6}, map[string]bool{}, nil},
// {"POP", "HL", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, nil},
// {"PREFIX", "CB", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"PUSH", "AF", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"PUSH", "BC", "", 0x00, 0x0000, CPU{b: 0xb3, c: 0xc4}, CPU{b: 0xb3, c: 0xc4}, map[string]bool{}, nil},
// {"PUSH", "DE", "", 0x00, 0x0000, CPU{d: 0xd5, e: 0xe6}, CPU{d: 0xd5, e: 0xe6}, map[string]bool{}, nil},
// {"PUSH", "HL", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, nil},
// {"RES", "0", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RES", "0", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"RES", "0", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"RES", "0", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"RES", "0", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"RES", "0", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"RES", "0", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"RES", "0", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"RES", "1", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RES", "1", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"RES", "1", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"RES", "1", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"RES", "1", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"RES", "1", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"RES", "1", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"RES", "1", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"RES", "2", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RES", "2", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"RES", "2", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"RES", "2", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"RES", "2", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"RES", "2", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"RES", "2", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"RES", "2", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"RES", "3", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RES", "3", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"RES", "3", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"RES", "3", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"RES", "3", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"RES", "3", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"RES", "3", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"RES", "3", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"RES", "4", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RES", "4", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"RES", "4", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"RES", "4", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"RES", "4", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"RES", "4", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"RES", "4", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"RES", "4", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"RES", "5", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RES", "5", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"RES", "5", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"RES", "5", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"RES", "5", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"RES", "5", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"RES", "5", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"RES", "5", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"RES", "6", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RES", "6", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"RES", "6", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"RES", "6", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"RES", "6", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"RES", "6", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"RES", "6", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"RES", "6", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"RES", "7", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RES", "7", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"RES", "7", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"RES", "7", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"RES", "7", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"RES", "7", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"RES", "7", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"RES", "7", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"RET", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"RET", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"RET", "NC", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"RET", "NZ", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"RET", "Z", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"RETI", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"RL", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RL", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "C": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RL", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RL", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "C": false}, nil},
// {"RL", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "C": true}, nil},
// {"RL", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true, "C": false}, nil},
// {"RL", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "C": false}, nil},
// {"RL", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "C": true}, nil},
// {"RL", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true, "C": false}, nil},
// {"RL", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "C": false}, nil},
// {"RL", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "C": true}, nil},
// {"RL", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true, "C": false}, nil},
// {"RL", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "C": false}, nil},
// {"RL", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "C": true}, nil},
// {"RL", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true, "C": false}, nil},
// {"RL", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "C": false}, nil},
// {"RL", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "C": true}, nil},
// {"RL", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true, "C": false}, nil},
// {"RL", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "C": false}, nil},
// {"RL", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "C": true}, nil},
// {"RL", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true, "C": false}, nil},
// {"RL", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "C": false}, nil},
// {"RL", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "C": true}, nil},
// {"RL", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true, "C": false}, nil},
// {"RLA", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"C": false}, nil},
// {"RLA", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"C": true}, nil},
// {"RLC", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RLC", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "C": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RLC", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RLC", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "C": false}, nil},
// {"RLC", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "C": true}, nil},
// {"RLC", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true, "C": false}, nil},
// {"RLC", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "C": false}, nil},
// {"RLC", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "C": true}, nil},
// {"RLC", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true, "C": false}, nil},
// {"RLC", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "C": false}, nil},
// {"RLC", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "C": true}, nil},
// {"RLC", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true, "C": false}, nil},
// {"RLC", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "C": false}, nil},
// {"RLC", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "C": true}, nil},
// {"RLC", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true, "C": false}, nil},
// {"RLC", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "C": false}, nil},
// {"RLC", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "C": true}, nil},
// {"RLC", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true, "C": false}, nil},
// {"RLC", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "C": false}, nil},
// {"RLC", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "C": true}, nil},
// {"RLC", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true, "C": false}, nil},
// {"RLC", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "C": false}, nil},
// {"RLC", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "C": true}, nil},
// {"RLC", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true, "C": false}, nil},
// {"RLCA", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"C": false}, nil},
// {"RLCA", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"C": true}, nil},
// {"RR", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RR", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "C": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RR", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RR", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "C": false}, nil},
// {"RR", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "C": true}, nil},
// {"RR", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true, "C": false}, nil},
// {"RR", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "C": false}, nil},
// {"RR", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "C": true}, nil},
// {"RR", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true, "C": false}, nil},
// {"RR", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "C": false}, nil},
// {"RR", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "C": true}, nil},
// {"RR", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true, "C": false}, nil},
// {"RR", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "C": false}, nil},
// {"RR", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "C": true}, nil},
// {"RR", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true, "C": false}, nil},
// {"RR", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "C": false}, nil},
// {"RR", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "C": true}, nil},
// {"RR", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true, "C": false}, nil},
// {"RR", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "C": false}, nil},
// {"RR", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "C": true}, nil},
// {"RR", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true, "C": false}, nil},
// {"RR", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "C": false}, nil},
// {"RR", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "C": true}, nil},
// {"RR", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true, "C": false}, nil},
// {"RRA", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"C": false}, nil},
// {"RRA", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"C": true}, nil},
// {"RRC", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RRC", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "C": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RRC", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"RRC", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "C": false}, nil},
// {"RRC", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "C": true}, nil},
// {"RRC", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true, "C": false}, nil},
// {"RRC", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "C": false}, nil},
// {"RRC", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "C": true}, nil},
// {"RRC", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true, "C": false}, nil},
// {"RRC", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "C": false}, nil},
// {"RRC", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "C": true}, nil},
// {"RRC", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true, "C": false}, nil},
// {"RRC", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "C": false}, nil},
// {"RRC", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "C": true}, nil},
// {"RRC", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true, "C": false}, nil},
// {"RRC", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "C": false}, nil},
// {"RRC", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "C": true}, nil},
// {"RRC", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true, "C": false}, nil},
// {"RRC", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "C": false}, nil},
// {"RRC", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "C": true}, nil},
// {"RRC", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true, "C": false}, nil},
// {"RRC", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "C": false}, nil},
// {"RRC", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "C": true}, nil},
// {"RRC", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true, "C": false}, nil},
// {"RRCA", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"C": false}, nil},
// {"RRCA", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"C": true}, nil},
// {"RST", "00H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"RST", "08H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"RST", "10H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"RST", "18H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"RST", "20H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"RST", "28H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"RST", "30H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"RST", "38H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"SBC", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SBC", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": false, "C": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SBC", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": true, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SBC", "A", "(HL)", 0x00, 0x0000, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, CPU{a: 0x1a, h: 0xa7, l: 0xf8}, map[string]bool{"Z": true, "H": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SBC", "A", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"SBC", "A", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"SBC", "A", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"SBC", "A", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"SBC", "A", "B", 0x00, 0x0000, CPU{a: 0x1a, b: 0x2b}, CPU{a: 0x1a, b: 0x2b}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"SBC", "A", "B", 0x00, 0x0000, CPU{a: 0x1a, b: 0x2b}, CPU{a: 0x1a, b: 0x2b}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"SBC", "A", "B", 0x00, 0x0000, CPU{a: 0x1a, b: 0x2b}, CPU{a: 0x1a, b: 0x2b}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"SBC", "A", "B", 0x00, 0x0000, CPU{a: 0x1a, b: 0x2b}, CPU{a: 0x1a, b: 0x2b}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"SBC", "A", "C", 0x00, 0x0000, CPU{a: 0x1a, c: 0x3c}, CPU{a: 0x1a, c: 0x3c}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"SBC", "A", "C", 0x00, 0x0000, CPU{a: 0x1a, c: 0x3c}, CPU{a: 0x1a, c: 0x3c}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"SBC", "A", "C", 0x00, 0x0000, CPU{a: 0x1a, c: 0x3c}, CPU{a: 0x1a, c: 0x3c}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"SBC", "A", "C", 0x00, 0x0000, CPU{a: 0x1a, c: 0x3c}, CPU{a: 0x1a, c: 0x3c}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"SBC", "A", "D", 0x00, 0x0000, CPU{a: 0x1a, d: 0x4d}, CPU{a: 0x1a, d: 0x4d}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"SBC", "A", "D", 0x00, 0x0000, CPU{a: 0x1a, d: 0x4d}, CPU{a: 0x1a, d: 0x4d}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"SBC", "A", "D", 0x00, 0x0000, CPU{a: 0x1a, d: 0x4d}, CPU{a: 0x1a, d: 0x4d}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"SBC", "A", "D", 0x00, 0x0000, CPU{a: 0x1a, d: 0x4d}, CPU{a: 0x1a, d: 0x4d}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"SBC", "A", "E", 0x00, 0x0000, CPU{a: 0x1a, e: 0x5e}, CPU{a: 0x1a, e: 0x5e}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"SBC", "A", "E", 0x00, 0x0000, CPU{a: 0x1a, e: 0x5e}, CPU{a: 0x1a, e: 0x5e}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"SBC", "A", "E", 0x00, 0x0000, CPU{a: 0x1a, e: 0x5e}, CPU{a: 0x1a, e: 0x5e}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"SBC", "A", "E", 0x00, 0x0000, CPU{a: 0x1a, e: 0x5e}, CPU{a: 0x1a, e: 0x5e}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"SBC", "A", "H", 0x00, 0x0000, CPU{a: 0x1a, h: 0x71}, CPU{a: 0x1a, h: 0x71}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"SBC", "A", "H", 0x00, 0x0000, CPU{a: 0x1a, h: 0x71}, CPU{a: 0x1a, h: 0x71}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"SBC", "A", "H", 0x00, 0x0000, CPU{a: 0x1a, h: 0x71}, CPU{a: 0x1a, h: 0x71}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"SBC", "A", "H", 0x00, 0x0000, CPU{a: 0x1a, h: 0x71}, CPU{a: 0x1a, h: 0x71}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"SBC", "A", "L", 0x00, 0x0000, CPU{a: 0x1a, l: 0x82}, CPU{a: 0x1a, l: 0x82}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"SBC", "A", "L", 0x00, 0x0000, CPU{a: 0x1a, l: 0x82}, CPU{a: 0x1a, l: 0x82}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"SBC", "A", "L", 0x00, 0x0000, CPU{a: 0x1a, l: 0x82}, CPU{a: 0x1a, l: 0x82}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"SBC", "A", "L", 0x00, 0x0000, CPU{a: 0x1a, l: 0x82}, CPU{a: 0x1a, l: 0x82}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"SBC", "A", "d8", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"SBC", "A", "d8", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"SBC", "A", "d8", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"SBC", "A", "d8", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"SCF", "", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"SET", "0", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SET", "0", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"SET", "0", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"SET", "0", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"SET", "0", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"SET", "0", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"SET", "0", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"SET", "0", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"SET", "1", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SET", "1", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"SET", "1", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"SET", "1", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"SET", "1", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"SET", "1", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"SET", "1", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"SET", "1", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"SET", "2", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SET", "2", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"SET", "2", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"SET", "2", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"SET", "2", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"SET", "2", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"SET", "2", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"SET", "2", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"SET", "3", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SET", "3", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"SET", "3", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"SET", "3", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"SET", "3", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"SET", "3", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"SET", "3", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"SET", "3", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"SET", "4", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SET", "4", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"SET", "4", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"SET", "4", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"SET", "4", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"SET", "4", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"SET", "4", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"SET", "4", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"SET", "5", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SET", "5", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"SET", "5", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"SET", "5", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"SET", "5", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"SET", "5", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"SET", "5", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"SET", "5", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"SET", "6", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SET", "6", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"SET", "6", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"SET", "6", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"SET", "6", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"SET", "6", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"SET", "6", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"SET", "6", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"SET", "7", "(HL)", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SET", "7", "A", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{}, nil},
// {"SET", "7", "B", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{}, nil},
// {"SET", "7", "C", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{}, nil},
// {"SET", "7", "D", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{}, nil},
// {"SET", "7", "E", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{}, nil},
// {"SET", "7", "H", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{}, nil},
// {"SET", "7", "L", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{}, nil},
// {"SLA", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SLA", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "C": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SLA", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SLA", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "C": false}, nil},
// {"SLA", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "C": true}, nil},
// {"SLA", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true, "C": false}, nil},
// {"SLA", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "C": false}, nil},
// {"SLA", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "C": true}, nil},
// {"SLA", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true, "C": false}, nil},
// {"SLA", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "C": false}, nil},
// {"SLA", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "C": true}, nil},
// {"SLA", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true, "C": false}, nil},
// {"SLA", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "C": false}, nil},
// {"SLA", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "C": true}, nil},
// {"SLA", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true, "C": false}, nil},
// {"SLA", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "C": false}, nil},
// {"SLA", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "C": true}, nil},
// {"SLA", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true, "C": false}, nil},
// {"SLA", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "C": false}, nil},
// {"SLA", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "C": true}, nil},
// {"SLA", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true, "C": false}, nil},
// {"SLA", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "C": false}, nil},
// {"SLA", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "C": true}, nil},
// {"SLA", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true, "C": false}, nil},
// {"SRA", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SRA", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SRA", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false}, nil},
// {"SRA", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true}, nil},
// {"SRA", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false}, nil},
// {"SRA", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true}, nil},
// {"SRA", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false}, nil},
// {"SRA", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true}, nil},
// {"SRA", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false}, nil},
// {"SRA", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true}, nil},
// {"SRA", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false}, nil},
// {"SRA", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true}, nil},
// {"SRA", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false}, nil},
// {"SRA", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true}, nil},
// {"SRA", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false}, nil},
// {"SRA", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true}, nil},
// {"SRL", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SRL", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "C": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SRL", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SRL", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "C": false}, nil},
// {"SRL", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "C": true}, nil},
// {"SRL", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true, "C": false}, nil},
// {"SRL", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "C": false}, nil},
// {"SRL", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "C": true}, nil},
// {"SRL", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true, "C": false}, nil},
// {"SRL", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "C": false}, nil},
// {"SRL", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "C": true}, nil},
// {"SRL", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true, "C": false}, nil},
// {"SRL", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "C": false}, nil},
// {"SRL", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "C": true}, nil},
// {"SRL", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true, "C": false}, nil},
// {"SRL", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "C": false}, nil},
// {"SRL", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "C": true}, nil},
// {"SRL", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true, "C": false}, nil},
// {"SRL", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "C": false}, nil},
// {"SRL", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "C": true}, nil},
// {"SRL", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true, "C": false}, nil},
// {"SRL", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "C": false}, nil},
// {"SRL", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "C": true}, nil},
// {"SRL", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true, "C": false}, nil},
// {"STOP", "0", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{}, nil},
// {"SUB", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SUB", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": false, "C": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SUB", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false, "H": true, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SUB", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true, "H": false, "C": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SUB", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"SUB", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"SUB", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"SUB", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"SUB", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"SUB", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"SUB", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"SUB", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"SUB", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"SUB", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"SUB", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"SUB", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"SUB", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"SUB", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"SUB", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"SUB", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"SUB", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"SUB", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"SUB", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"SUB", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"SUB", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"SUB", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"SUB", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"SUB", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"SUB", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"SUB", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"SUB", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"SUB", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"SUB", "d8", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"Z": false, "H": false, "C": false}, nil},
// {"SUB", "d8", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"Z": false, "H": false, "C": true}, nil},
// {"SUB", "d8", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"Z": false, "H": true, "C": false}, nil},
// {"SUB", "d8", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"Z": true, "H": false, "C": false}, nil},
// {"SWAP", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SWAP", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"SWAP", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false}, nil},
// {"SWAP", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true}, nil},
// {"SWAP", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false}, nil},
// {"SWAP", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true}, nil},
// {"SWAP", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false}, nil},
// {"SWAP", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true}, nil},
// {"SWAP", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false}, nil},
// {"SWAP", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true}, nil},
// {"SWAP", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false}, nil},
// {"SWAP", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true}, nil},
// {"SWAP", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false}, nil},
// {"SWAP", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true}, nil},
// {"SWAP", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false}, nil},
// {"SWAP", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true}, nil},
// {"XOR", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": false}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"XOR", "(HL)", "", 0x00, 0x0000, CPU{h: 0xa7, l: 0xf8}, CPU{h: 0xa7, l: 0xf8}, map[string]bool{"Z": true}, testMemory{mem: map[uint16]byte{0xa7f8: 0xcc}}},
// {"XOR", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": false}, nil},
// {"XOR", "A", "", 0x00, 0x0000, CPU{a: 0x1a}, CPU{a: 0x1a}, map[string]bool{"Z": true}, nil},
// {"XOR", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": false}, nil},
// {"XOR", "B", "", 0x00, 0x0000, CPU{b: 0x2b}, CPU{b: 0x2b}, map[string]bool{"Z": true}, nil},
// {"XOR", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": false}, nil},
// {"XOR", "C", "", 0x00, 0x0000, CPU{c: 0x3c}, CPU{c: 0x3c}, map[string]bool{"Z": true}, nil},
// {"XOR", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": false}, nil},
// {"XOR", "D", "", 0x00, 0x0000, CPU{d: 0x4d}, CPU{d: 0x4d}, map[string]bool{"Z": true}, nil},
// {"XOR", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": false}, nil},
// {"XOR", "E", "", 0x00, 0x0000, CPU{e: 0x5e}, CPU{e: 0x5e}, map[string]bool{"Z": true}, nil},
// {"XOR", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": false}, nil},
// {"XOR", "H", "", 0x00, 0x0000, CPU{h: 0x71}, CPU{h: 0x71}, map[string]bool{"Z": true}, nil},
// {"XOR", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": false}, nil},
// {"XOR", "L", "", 0x00, 0x0000, CPU{l: 0x82}, CPU{l: 0x82}, map[string]bool{"Z": true}, nil},
// {"XOR", "d8", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"Z": false}, nil},
// {"XOR", "d8", "", 0x00, 0x0000, CPU{}, CPU{}, map[string]bool{"Z": true}, nil},
